package drools.spring.rules;

import drools.spring.example.model.Symptom;
import drools.spring.example.model.Illness;
import drools.spring.example.model.User;
import drools.spring.example.model.Diagnose;
import drools.spring.example.model.DiagnoseSymptom;
import java.util.List;
import java.util.ArrayList;

global Long pId;


rule "Patient had 10 or more times high pressure in last 6 months"
	salience 50
	agenda-group "set-symptom-num"
	no-loop
	lock-on-active true
    when
    	 
		$illness: Illness( name == "Hypertension" && $numOfSymptoms : symptomsFound && $numOfSymptoms == 0 
				&& $sym : symptomTermsFound)
		$d : Diagnose( $idD : id && patientId == pId)
    	$dSymptom : DiagnoseSymptom( diagnoseId == $idD && symptomTerm == "HIGH_PRESSURE" )
    	
    	$s: Symptom(Symptom.Term.TEN_TIMES_HIGH_PRESSURE_IN_LAST_6_MONTHS not memberOf $sym)
    	
        Number(intValue >= 9) from accumulate(
            $ds: DiagnoseSymptom(
                this != $dSymptom, 
                symptomTerm == "HIGH_PRESSURE",
                date > (addMonths(-6)),
                patientId == pId
            ),
            count($ds)
        )
    	
    then
    	$illness.setSymptomsFound(1);
    	$illness.getSymptomTermsFound().add(Symptom.Term.TEN_TIMES_HIGH_PRESSURE_IN_LAST_6_MONTHS);
    	update($illness);
end


rule "Hypertension - Symptoms"
	no-loop 
	agenda-group "symptoms"
    when
        $i: Illness( name == "Hypertension" )
    then
    	Symptom s = new Symptom();
    	s.setTerm(Symptom.Term.TEN_TIMES_HIGH_PRESSURE_IN_LAST_6_MONTHS);
    	s.setSpecific(false);
    	s.setHelper("Patient had 10 times high pressure in last 6 months");
    	$i.getSymptoms().add(s);
    	update($i);
    	
end

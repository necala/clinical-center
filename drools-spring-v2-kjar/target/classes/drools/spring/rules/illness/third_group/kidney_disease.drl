package drools.spring.rules;

import drools.spring.example.model.Symptom;
import drools.spring.example.model.Record;
import drools.spring.example.model.Illness;
import drools.spring.example.model.Patient;
import java.util.ArrayList;
import java.util.Date;
import java.util.Calendar;


global ArrayList<Illness> illnesses;
global ArrayList<Illness> allSymptomIllnesses;
global String pId;

rule "All illnesses - Chronic Kidney Disease"
	agenda-group "all-illnesses"
    when
        $list: List() from collect(Symptom( ))
       
        $resList: List() from accumulate(
            $sym: Symptom(
                term == Symptom.Term.FATIGUE || term == Symptom.Term.NOCTURIA 
                || term == Symptom.Term.LEGS_AND_JOINTS_SWELLING || term == Symptom.Term.CHOKING
                || term == Symptom.Term.CHEST_PAIN
            ) from $list,
            init(List<Symptom> list1 = new ArrayList<Symptom>();),
            action(list1.add($sym);),
            result(list1)
        )
    then    	
        if (!$resList.isEmpty()){
	        Illness i = new Illness();
	    	i.setCategory(Illness.Category.THIRD);
	    	i.setName("Chronic Kidney Disease");
	    	i.setSymptoms($resList);
	    	illnesses.add(i);
        } 
end

rule "Specific request - all illnesses - Kidney Disease"
	agenda-group "special-request-all-illnesses"
    when
    	$i: Illness( name == "Diabetes" )
    	$p: Patient( patientId == pId )
        $r: Record( illness == $i, patient == $p )
    then    	
        if (!illnesses.isEmpty()){
        	for (Object o: illnesses){
        		Illness i = (Illness) o;
        		if (i.getName().equals("Chronic Kidney Disease")){
        			Symptom s = new Symptom();
				    s.setTerm(Symptom.Term.SUFFERES_FROM_DIABETES);
			    	s.setSpecific(true);
			    	s.setHelper("Sufferes from diabetes");
        			i.getSymptoms().add(s);
        			break;
        		}
        	}
        }else{
        	Illness i = new Illness();
	    	i.setCategory(Illness.Category.THIRD);
	    	i.setName("Chronic Kidney Disease");
	    	Symptom s = new Symptom();
			s.setTerm(Symptom.Term.SUFFERES_FROM_DIABETES);
	    	s.setSpecific(true);
	      	s.setHelper("Sufferes from diabetes");
	    	i.getSymptoms().add(s);
	    	illnesses.add(i);
        }
end

rule "Suffers from Hypertension more than six months"
	agenda-group "special-request-all-illnesses"
    when
    	$i: Illness( name == "Hypertension" )
    	$p: Patient( patientId == pId )
        $r: Record( illness == $i, patient == $p, $d: date,  new Date() > (addSixMonths($d))  )
    then   
        if (!illnesses.isEmpty()){
        	for (Object o: illnesses){
        		Illness i = (Illness) o;
        		if (i.getName().equals("Chronic Kidney Disease")){
        			Symptom s = new Symptom();
				    s.setTerm(Symptom.Term.SUFFERES_FROM_HYPERTENSION_FOR_AT_LEAST_6_MONTHS);
			    	s.setSpecific(true);
			    	s.setHelper("Sufferes from Hypertension for at least 6 months");
        			i.getSymptoms().add(s);
        			break;
        		}
        	}
        }else{
        	Illness i = new Illness();
	    	i.setCategory(Illness.Category.THIRD);
	    	i.setName("Chronic Kidney Disease");
	    	Symptom s = new Symptom();
			s.setTerm(Symptom.Term.SUFFERES_FROM_HYPERTENSION_FOR_AT_LEAST_6_MONTHS);
	    	s.setSpecific(true);
	    	s.setHelper("Sufferes from Hypertension for at least 6 months");
	    	i.getSymptoms().add(s);
	    	illnesses.add(i);
        }
end

rule "Patient suffers from diabetes and wants one illness"
	agenda-group "one-illness"
    when
        $list: List() from collect(Symptom( ))
       
        $resList: List() from accumulate(
            $sym: Symptom(
                term == Symptom.Term.FATIGUE || term == Symptom.Term.NOCTURIA 
                || term == Symptom.Term.LEGS_AND_JOINTS_SWELLING || term == Symptom.Term.CHOKING
                || term == Symptom.Term.CHEST_PAIN
            ) from $list,
            init(List<Symptom> list1 = new ArrayList<Symptom>();),
            action(list1.add($sym);),
            result(list1)
        )
        $i: Illness( name == "Diabetes" )
    	$p: Patient( patientId == pId )
        $r: Record( illness == $i, patient == $p )
    then    	
        if (!$resList.isEmpty() && $resList.size() >= 2){
	        Illness i = new Illness();
	    	i.setCategory(Illness.Category.THIRD);
	    	i.setName("Chronic Kidney Disease");
	    	i.setSymptoms($resList);
	    	Symptom s = new Symptom();
			s.setTerm(Symptom.Term.SUFFERES_FROM_DIABETES);
	    	s.setSpecific(true);
	      	s.setHelper("Sufferes from diabetes");
	    	i.getSymptoms().add(s);
	    	boolean flag = true;
	    	for (Object o: allSymptomIllnesses){
	    		Illness i1 = (Illness) o;
	    		if (i1.getName().equals("Chronic Kidney Disease")){
	    			flag = false;
	    			break;
	    		}
	    	}
	    	if (flag){
	    		allSymptomIllnesses.add(i);
	    	}
        } 
end

rule "Patient suffers from Hypertension for one illness"
	agenda-group "special-request-one-illness"
    when
        $list: List() from collect(Symptom( ))
       
        $resList: List() from accumulate(
            $sym: Symptom(
                term == Symptom.Term.FATIGUE || term == Symptom.Term.NOCTURIA 
                || term == Symptom.Term.LEGS_AND_JOINTS_SWELLING || term == Symptom.Term.CHOKING
                || term == Symptom.Term.CHEST_PAIN
            ) from $list,
            init(List<Symptom> list1 = new ArrayList<Symptom>();),
            action(list1.add($sym);),
            result(list1)
        )
        $i: Illness( name == "Hypertension" )
    	$p: Patient( patientId == pId )
        $r: Record( illness == $i, patient == $p, $d: date,  new Date() > (addSixMonths($d))  )
    then    	
        if (!$resList.isEmpty() && $resList.size() >= 2){
	        Illness i = new Illness();
	    	i.setCategory(Illness.Category.THIRD);
	    	i.setName("Chronic Kidney Disease");
	    	i.setSymptoms($resList);
	    	Symptom s = new Symptom();
			s.setTerm(Symptom.Term.SUFFERES_FROM_HYPERTENSION_FOR_AT_LEAST_6_MONTHS);
    		s.setSpecific(true);
    		s.setHelper("Sufferes from Hypertension for at least 6 months");
	    	i.getSymptoms().add(s);
	    	boolean flag = true;
	    	for (Object o: allSymptomIllnesses){
	    		Illness i1 = (Illness) o;
	    		if (i1.getName().equals("Chronic Kidney Disease")){
	    			i1.getSymptoms().add(s);
	    			flag = false;
	    			break;
	    		}
	    	}
	    	if (flag){
	    		allSymptomIllnesses.add(i);
	    	}
        } 
end

function Date addSixMonths(Date date){
	Calendar newCal = Calendar.getInstance();
	newCal.setTime(date);
	newCal.add(Calendar.MONTH, 6);
	return newCal.getTime();
}

rule "Chronic Kidney Disease - Symptoms"
	no-loop 
	agenda-group "symptoms"
    when
        $i: Illness( name == "Chronic Kidney Disease" )
    then
    	Symptom s = new Symptom();
    	s.setTerm(Symptom.Term.CHEST_PAIN);
    	s.setSpecific(false);
    	s.setHelper("Chest pain");
    	$i.getSymptoms().add(s);
    	Symptom s1 = new Symptom();
    	s1.setTerm(Symptom.Term.LEGS_AND_JOINTS_SWELLING);
    	s1.setSpecific(false);
    	s1.setHelper("Legs and joints swelling");
    	$i.getSymptoms().add(s1);
    	Symptom s2 = new Symptom();
        s2.setTerm(Symptom.Term.FATIGUE);
    	s2.setSpecific(false);
    	s2.setHelper("Fatigue");
    	$i.getSymptoms().add(s2);
    	Symptom s3 = new Symptom();
    	s3.setTerm(Symptom.Term.NOCTURIA);
    	s3.setSpecific(false);
    	s3.setHelper("Nocturia");
    	$i.getSymptoms().add(s3);
    	Symptom s4 = new Symptom();
    	s4.setTerm(Symptom.Term.CHOKING);
    	s4.setSpecific(false);
    	s4.setHelper("Choking");
    	$i.getSymptoms().add(s4);
    	Symptom s5 = new Symptom();
    	s5.setTerm(Symptom.Term.SUFFERES_FROM_HYPERTENSION_FOR_AT_LEAST_6_MONTHS);
    	s5.setSpecific(true);
    	s5.setHelper("Sufferes from Hypertension for at least 6 months");
    	$i.getSymptoms().add(s5);
    	Symptom s6 = new Symptom();
    	s6.setTerm(Symptom.Term.SUFFERES_FROM_DIABETES);
    	s6.setSpecific(true);
    	s6.setHelper("Sufferes from diabetes");
    	$i.getSymptoms().add(s6);
    	update($i);
    	
end
